<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tableLayoutPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>