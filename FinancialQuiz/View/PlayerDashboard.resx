<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tableLayoutPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>